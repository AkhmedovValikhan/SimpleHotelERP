<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" mc:Ignorable="d">
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F0F0F0" Offset="0.0"/>
		<GradientStop Color="#E5E5E5" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
	<LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#ECF4FC" Offset="0.0"/>
		<GradientStop Color="#DCECFC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
	<SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
	<SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
	<SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>

	<Style x:Key="TabContentStyle" TargetType="{x:Type TabControl}">
		<Setter Property="Padding" Value="2"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
						<Grid.ColumnDefinitions>
							<ColumnDefinition x:Name="ColumnDefinition0"/>
							<ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
							<RowDefinition x:Name="RowDefinition1" Height="*"/>
						</Grid.RowDefinitions>
						<TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
						<Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Bottom">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Left">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
						</Trigger>
						<Trigger Property="TabStripPlacement" Value="Right">
							<Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
							<Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
							<Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
							<Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
							<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
							<Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
							<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
							<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
							<Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TabItemGuests" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderThickness="0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
											<EasingColorKeyFrame KeyTime="0" Value="#FF002E91"/>
											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1F99FF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder_Copy">
											<EasingColorKeyFrame KeyTime="0" Value="#FF81BAFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0" Opacity="1" Margin="-1,-1,0,1.125" Background="#FF115BB4" BorderBrush="{x:Null}" />
							<Border x:Name="innerBorder_Copy" BorderThickness="0" Opacity="1" Margin="0" Background="White" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Grid.Column="1" />
							<Rectangle Grid.Column="0" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="1" Margin="0.25,39.004,0,-0.004" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="134.75"/>
							<Rectangle x:Name="rectangle" Fill="#FF48ACFF" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="guest.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
							<Rectangle x:Name="rectangle1" Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="134.249,0.004,-0.249,-0.004" Grid.ColumnSpan="1" StrokeThickness="0" Opacity="1"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Margin" TargetName="innerBorder" Value="-1,-1,0,0"/>
							<Setter Property="Fill" TargetName="rectangle" Value="#FF48ACFF"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.5"/>
							<Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="RoomsTabItem" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderBrush="#FF8DDC95" BorderThickness="0,0,0,1">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0" Background="#FF60D16B">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0,0,1,0" Opacity="1" Margin="-1,-1,0,0" Background="#FF00A40F" BorderBrush="{x:Null}" />
							<Rectangle Grid.Column="0" Fill="#FF8DDC95" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle x:Name="rectangle" Fill="#FF006331" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="room.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.7"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ReportTabItem" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderBrush="#FF8DDC95" BorderThickness="0,0,0,1">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0" Background="#FF60D16B">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0,0,1,0" Opacity="1" Margin="-1,-1,0,0" Background="#FF00A40F" BorderBrush="{x:Null}" />
							<Rectangle Grid.Column="0" Fill="#FF8DDC95" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle x:Name="rectangle" Fill="#FF006331" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="report.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.7"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PaymentTabItem" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderBrush="#FF8DDC95" BorderThickness="0,0,0,1">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0" Background="#FF60D16B">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0,0,1,0" Opacity="1" Margin="-1,-1,0,0" Background="#FF00A40F" BorderBrush="{x:Null}" />
							<Rectangle Grid.Column="0" Fill="#FF8DDC95" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle x:Name="rectangle" Fill="#FF006331" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="payment.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.7"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TabItemRegistr" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderThickness="0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
											<EasingColorKeyFrame KeyTime="0" Value="#FF002E91"/>
											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1F99FF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder_Copy">
											<EasingColorKeyFrame KeyTime="0" Value="#FF81BAFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0" Opacity="1" Margin="-1,-1,0,1.125" Background="#FF115BB4" BorderBrush="{x:Null}" />
							<Border x:Name="innerBorder_Copy" BorderThickness="0" Opacity="1" Margin="0" Background="White" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Grid.Column="1" />
							<Rectangle Grid.Column="0" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="1" Margin="0.25,39.004,0,-0.004" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="134.75"/>
							<Rectangle x:Name="rectangle" Fill="#FF48ACFF" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="registr.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
							<Rectangle x:Name="rectangle1" Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="134.249,0.004,-0.249,-0.004" Grid.ColumnSpan="1" StrokeThickness="0" Opacity="1"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Margin" TargetName="innerBorder" Value="-1,-1,0,0"/>
							<Setter Property="Fill" TargetName="rectangle" Value="#FF48ACFF"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.5"/>
							<Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TabItemRooms" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderThickness="0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
											<EasingColorKeyFrame KeyTime="0" Value="#FF002E91"/>
											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1F99FF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder_Copy">
											<EasingColorKeyFrame KeyTime="0" Value="#FF81BAFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0" Opacity="1" Margin="-1,-1,0,1.125" Background="#FF115BB4" BorderBrush="{x:Null}" />
							<Border x:Name="innerBorder_Copy" BorderThickness="0" Opacity="1" Margin="0" Background="White" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Grid.Column="1" />
							<Rectangle Grid.Column="0" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="1" Margin="0.25,39.004,0,-0.004" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="134.75"/>
							<Rectangle x:Name="rectangle" Fill="#FF48ACFF" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="room.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
							<Rectangle x:Name="rectangle1" Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="134.249,0.004,-0.249,-0.004" Grid.ColumnSpan="1" StrokeThickness="0" Opacity="1"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Margin" TargetName="innerBorder" Value="-1,-1,0,0"/>
							<Setter Property="Fill" TargetName="rectangle" Value="#FF48ACFF"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.5"/>
							<Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TabItemReport" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderThickness="0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
											<EasingColorKeyFrame KeyTime="0" Value="#FF002E91"/>
											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1F99FF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder_Copy">
											<EasingColorKeyFrame KeyTime="0" Value="#FF81BAFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0" Opacity="1" Margin="-1,-1,0,1.125" Background="#FF115BB4" BorderBrush="{x:Null}" />
							<Border x:Name="innerBorder_Copy" BorderThickness="0" Opacity="1" Margin="0" Background="White" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Grid.Column="1" />
							<Rectangle Grid.Column="0" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="1" Margin="0.25,39.004,0,-0.004" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="134.75"/>
							<Rectangle x:Name="rectangle" Fill="#FF48ACFF" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="report.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
							<Rectangle x:Name="rectangle1" Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="134.249,0.004,-0.249,-0.004" Grid.ColumnSpan="1" StrokeThickness="0" Opacity="1"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Margin" TargetName="innerBorder" Value="-1,-1,0,0"/>
							<Setter Property="Fill" TargetName="rectangle" Value="#FF48ACFF"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.5"/>
							<Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TabItemPayment" TargetType="{x:Type TabItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="6,2,6,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard1"/>
					</ControlTemplate.Resources>
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" BorderThickness="0">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="image">
											<EasingThicknessKeyFrame KeyTime="0" Value="10"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,5,5,5">
												<EasingThicknessKeyFrame.EasingFunction>
													<CircleEase EasingMode="EaseOut"/>
												</EasingThicknessKeyFrame.EasingFunction>
											</EasingThicknessKeyFrame>
										</ThicknessAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="rectangle">
											<EasingColorKeyFrame KeyTime="0" Value="#FF002E91"/>
											<EasingColorKeyFrame KeyTime="0:0:0.1" Value="#FF1F99FF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="innerBorder_Copy">
											<EasingColorKeyFrame KeyTime="0" Value="#FF81BAFF"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="mainBorder" Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition Width="3*"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="innerBorder" BorderThickness="0" Opacity="1" Margin="-1,-1,0,1.125" Background="#FF115BB4" BorderBrush="{x:Null}" />
							<Border x:Name="innerBorder_Copy" BorderThickness="0" Opacity="1" Margin="0" Background="White" BorderBrush="{x:Null}" Grid.ColumnSpan="1" Grid.Column="1" />
							<Rectangle Grid.Column="0" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="44.25,0,0,-1" Grid.ColumnSpan="2" StrokeThickness="0"/>
							<Rectangle Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="1" Margin="0.25,39.004,0,-0.004" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="134.75"/>
							<Rectangle x:Name="rectangle" Fill="#FF48ACFF" HorizontalAlignment="Stretch" Height="40" Margin="0,0,0,-1" Stroke="Black" StrokeThickness="0" VerticalAlignment="Top" Width="Auto" Grid.ColumnSpan="2" Opacity="0"/>
							<ContentPresenter Grid.Column="1" x:Name="contentPresenter" ContentSource="Header" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Left" VerticalAlignment="Center" />
							<Image x:Name="image" Source="payment.png" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10" />
							<Rectangle x:Name="rectangle1" Grid.Column="1" Fill="#FF69ADFF" HorizontalAlignment="Left" Height="40" Stroke="Black" VerticalAlignment="Top" Width="1" Margin="134.249,0.004,-0.249,-0.004" Grid.ColumnSpan="1" StrokeThickness="0" Opacity="1"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Margin" TargetName="image" Value="5"/>
							<Setter Property="Margin" TargetName="templateRoot" Value="0,0,-1,0"/>
							<Setter Property="Margin" TargetName="innerBorder" Value="-1,-1,0,0"/>
							<Setter Property="Fill" TargetName="rectangle" Value="#FF48ACFF"/>
							<Setter Property="Opacity" TargetName="rectangle" Value="0.5"/>
							<Setter Property="Opacity" TargetName="rectangle1" Value="0"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Resource dictionary entries should be defined here. -->
	<LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF0F0F0" Offset="0.0"/>
		<GradientStop Color="#FFE5E5E5" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
	<SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
	<LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFECF4FC" Offset="0.0"/>
		<GradientStop Color="#FFDCECFC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
	<LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFEBF4FC" Offset="0.0"/>
		<GradientStop Color="#FFDCECFC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
	<SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
	<LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFDAECFC" Offset="0.0"/>
		<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
	<LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFDAEBFC" Offset="0.0"/>
		<GradientStop Color="#FFC4E0FC" Offset="1.0"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
	<SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
	<SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FF90E6FF">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard RepeatBehavior="Forever">
										<PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="arrow">
											<EasingPointKeyFrame KeyTime="0" Value="0,0"/>
											<EasingPointKeyFrame KeyTime="0:0:0.1" Value="0.5,0.5"/>
											<EasingPointKeyFrame KeyTime="0:0:0.2" Value="0.5,0.5"/>
											<EasingPointKeyFrame KeyTime="0:0:0.3" Value="0.5,0.5"/>
											<EasingPointKeyFrame KeyTime="0:0:0.4" Value="0.5,0.5"/>
										</PointAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="arrow">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="arrow">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="arrow">
											<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="arrow">
											<EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="0"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="0"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0"/>
											<EasingThicknessKeyFrame KeyTime="0:0:0.4" Value="0"/>
										</ThicknessAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
							<Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="#FF00C5FF" Height="5.479" Stretch="Fill" Width="9.167" RenderTransformOrigin="0.5,0.5" OpacityMask="{x:Null}">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
						</MultiDataTrigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFBFBFBF"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
							<Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
							<Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
							<Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
				<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
					<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Themes:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Foreground="#FF191919" VerticalAlignment="Stretch"/>
			<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true"/>
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</MultiTrigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
				<Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
					<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
						<ScrollViewer x:Name="DropDownScrollViewer">
							<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
								</Canvas>
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Themes:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
			<Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
				<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Opacity" TargetName="border" Value="0.56"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="true">
				<Setter Property="Foreground" Value="Black"/>
			</Trigger>
			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="shadow" Value="#71000000"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping" Value="true"/>
					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</MultiTrigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Padding" Value="6,3,5,3"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="2"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>